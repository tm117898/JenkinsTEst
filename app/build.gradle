apply plugin: 'com.android.application'

def findBugs = project.hasProperty('findBugs') && project.property("findBugs").toBoolean()
//def findBugs = true
//def checkStyle = project.hasProperty('checkStyle') && project.property("checkStyle").toBoolean()
def checkStyle = true

if (findBugs) {
    apply plugin: 'findbugs'
}
if (checkStyle) {
    apply plugin: 'checkstyle'
}

project.afterEvaluate {
    if (checkStyle) {
        task checkstyle(type: Checkstyle) {
            configFile = file("checkStyle.xml")
            source = fileTree('src')
            ignoreFailures = true
            classpath = files()
        }
    }

    if (findBugs) {
        task findbugs(type: FindBugs) {
            ignoreFailures = false
            effort = "max"
            reportLevel = "high"
//    excludeFilter = new File("${project.rootDir}/check_config/findbugs.xml")//这里是配置的校验文件目录；
            classes = files("${project.rootDir}/app/build/intermediates/javac")
            source = files("${project.rootDir}/app/src/main/java")
            include '**/*.java'
            exclude '**/gen/**'
            reports {
                xml.enabled = false
                html.enabled = true
                xml {
                    destination "$reportsDir/findbugs/findbugs.xml" //这里是报告产生的路径
                }
                html {
                    destination "$reportsDir/findbugs/findbugs.html" //这里是报告产生的路径
                }
            }
            classpath = files()
        }
    }
}

android {
    compileSdkVersion 29
    defaultConfig {
        applicationId "com.cesc.shang"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        ndk {
            //选择要添加的对应cpu类型的.so库。
            abiFilters 'armeabi-v7a'
        }
    }
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    repositories {
        flatDir {
            dirs 'libs'
        }
    }
}

dependencies {
    api fileTree(dir: 'libs', include: ['*.jar', '*.aar'])
}
